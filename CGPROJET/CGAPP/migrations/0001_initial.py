# Generated by Django 5.1.7 on 2025-08-14 10:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbonnementNewsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('date_abonnement', models.DateTimeField(auto_now_add=True)),
                ('actif', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdresseLivraison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rue', models.CharField(max_length=255)),
                ('ville', models.CharField(max_length=100)),
                ('code_postal', models.CharField(max_length=20)),
                ('pays', models.CharField(max_length=100)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('ordre_affichage', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
                'ordering': ['ordre_affichage', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('sujet', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('date_contact', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('reduction', models.DecimalField(decimal_places=2, max_digits=5)),
                ('actif', models.BooleanField(default=True)),
                ('date_expiration', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Gerant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Panier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('methode_paiement', models.CharField(max_length=50)),
                ('statut', models.CharField(default='en_attente', max_length=20)),
                ('adresse_livraison', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='CGAPP.adresselivraison')),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CGAPP.coupon')),
            ],
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_paiement', models.DateTimeField(auto_now_add=True)),
                ('statut', models.CharField(default='en attente', max_length=20)),
                ('commande', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='CGAPP.commande')),
            ],
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom du produit')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Description courte')),
                ('description_longue', models.TextField(blank=True, verbose_name='Description détaillée')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix (FCFA)')),
                ('promotion', models.PositiveIntegerField(default=0, help_text='Pourcentage de réduction (0-100)', verbose_name='Pourcentage de réduction')),
                ('quantite_disponible', models.PositiveIntegerField(default=0, verbose_name='Quantité en stock')),
                ('image', models.ImageField(upload_to='produits/', verbose_name='Image principale')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_populaire', models.BooleanField(default=False, help_text='Cochez pour afficher ce produit comme populaire', verbose_name='Produit populaire')),
                ('ingredients', models.TextField(blank=True, verbose_name='Liste des ingrédients')),
                ('allergenes', models.CharField(blank=True, max_length=200, verbose_name='Allergènes')),
                ('poids_net', models.CharField(blank=True, max_length=20, verbose_name='Poids net')),
                ('conseil_conservation', models.CharField(blank=True, default='À conserver à -18°C', max_length=100, verbose_name='Conseil de conservation')),
                ('categorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='produits', to='CGAPP.categorie', verbose_name='Catégorie')),
                ('gerant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produits', to='CGAPP.gerant', verbose_name='Gérant responsable')),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='LignePanier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField(default=1)),
                ('panier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='CGAPP.panier')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CGAPP.produit')),
            ],
        ),
        migrations.CreateModel(
            name='LigneCommande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField(default=1)),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=10)),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='CGAPP.commande')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CGAPP.produit')),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('client', 'Client'), ('admin', 'Admin'), ('serveur', 'Serveur'), ('gerant', 'Gérant')], max_length=10)),
                ('telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Serveur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='panier',
            name='utilisateur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_notification', models.CharField(choices=[('commande_confirmee', 'Commande confirmée'), ('commande_preparation', 'Commande en préparation'), ('commande_livraison', 'Commande en livraison'), ('commande_livree', 'Commande livrée'), ('commande_annulee', 'Commande annulée'), ('produit_stock_bas', 'Stock produit bas'), ('nouveau_message', 'Nouveau message contact')], max_length=25)),
                ('titre', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('lue', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('commande', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='CGAPP.commande')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='HistoriqueAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_action', models.CharField(choices=[('creation', 'Création'), ('modification', 'Modification'), ('suppression', 'Suppression'), ('connexion', 'Connexion'), ('commande_statut', 'Changement statut commande'), ('produit_ajout', 'Ajout produit'), ('produit_modif', 'Modification produit'), ('produit_suppr', 'Suppression produit'), ('utilisateur_creation', 'Création utilisateur'), ('utilisateur_suspension', 'Suspension utilisateur'), ('configuration', 'Modification configuration')], max_length=25)),
                ('description', models.TextField()),
                ('objet_concerne', models.CharField(blank=True, max_length=100, null=True)),
                ('objet_id', models.PositiveIntegerField(blank=True, null=True)),
                ('details_supplementaires', models.JSONField(blank=True, null=True)),
                ('adresse_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('date_action', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Historique d'action",
                'verbose_name_plural': 'Historique des actions',
                'ordering': ['-date_action'],
            },
        ),
        migrations.AddField(
            model_name='gerant',
            name='utilisateur',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commande',
            name='utilisateur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='adresselivraison',
            name='utilisateur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['nom'], name='CGAPP_produ_nom_df9a5f_idx'),
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['categorie'], name='CGAPP_produ_categor_02867b_idx'),
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['prix'], name='CGAPP_produ_prix_ee2210_idx'),
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['est_populaire'], name='CGAPP_produ_est_pop_a8604e_idx'),
        ),
    ]
